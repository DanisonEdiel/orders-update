# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/api

# Auth Service Configuration
auth.service.url=http://34.234.56.149:8000
auth.service.validate-endpoint=/auth/validate

# Spring Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:8080/auth/realms/orders}

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/orders_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# AWS SNS Configuration
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID:mock-access-key}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY:mock-secret-key}
cloud.aws.region.static=${AWS_REGION:us-east-1}
cloud.aws.sns.topic.order-updated=${ORDER_UPDATED_TOPIC_ARN:arn:aws:sns:us-east-1:000000000000:mock-order-updated}
cloud.aws.sns.enabled=${AWS_SNS_ENABLED:false}

# OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Monitoring Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.metrics.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.example=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %5p %c{1}:%L - %m%n

# Cache Configuration
spring.cache.type=none

# Feign Client Configuration
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.client.config.default.loggerLevel=full

# JWT Configuration
app.jwt.header=Authorization
